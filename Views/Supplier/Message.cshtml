@model Clinic_Automation.Models.Messaging
@{
    ViewBag.Title = "Message";
    Layout = "~/Views/Supplier/_Layout.cshtml";
}
<head>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>

<main class="content">
    <div class="container p-0">
        <div class="flex-container" style="display: flex; align-items: center; justify-content: space-between; padding-inline-end: 1.5em;">
            <h1 class="h3 mb-3">Messages</h1>
            <div class="flex-container" style="display: flex;">
                <div style="margin-right: 16px;">
                    <a href="#" onclick="openForm()" class="btn btn-success">
                        <span style="padding-right:3px; display:inline-block;">
                            <img width="30" height="30" src="https://img.icons8.com/plasticine/100/create-new.png" alt="create-new" />
                            New Message
                        </span>
                    </a>
                </div>
            </div>
        </div>
        @*@using (Html.BeginForm("NewMessage", "Supplier", FormMethod.Post))*@

        <div id="popupForm" class="popup">
            <form class="popup-content" action="" method="post">
                <div class="form-group">
                    <label for="department">Department:</label>
                    @*@Html.DropDownListFor(a => a.selected_acc_id, Model.Account_list, "Select", new { @class = "form-control" })*@
                    <select id="department" class="form-control" name="department" required>
                        <option value="department1">Doctor</option>
                        <option value="department2">Salesman</option>
                        Add more departments as needed
                    </select>
                </div>

                <div class="form-group">
                    <label for="receiver">To:</label>
                    <select id="receiver" class="form-control" name="receiver" required>
                        <!-- Options for receiver users from selected department will be populated dynamically using JavaScript -->
                    </select>
                </div>

                <div class="form-group">
                    <label for="message">Message:</label>
                    <textarea id="message" class="align-content-xl-end" name="message" required></textarea>
                </div>
                <div class="flex-container" style="display: flex; align-items: center; justify-content: space-between;">
                    <input type="submit" value="Send">
                    <a href="#" onclick="closeForm()" class="btn btn-secondary">Cancel</a>
                </div>

            </form>
        </div>

        @if (Model.Sender_List.Count() == 0)
        {
            <div style="display: flex; align-items: center; justify-content: center; height: 60vh;">
                <img src="~/Assets/NoData.jpg" style="max-width: 300px; max-height: 400px;" alt="No Data Image">
            </div>
        }
        else
        {
            <div class="card">
                <div class="row g-0">
                    <div class="col-12 col-lg-5 col-xl-3 border-right">

                        <div class="px-4 d-none d-md-block">
                            <div class="d-flex align-items-center">
                                <div class="flex-grow-1">
                                    <input type="text" class="form-control my-3" placeholder="Search...">
                                </div>
                            </div>
                        </div>

                        @foreach (var item in Model.Sender_List)
                        {
                            <a href="@Url.Action("ViewMessage", "Supplier", new { sender_name = item.username, sender_id = item.SenderId })" class="list-group-item list-group-item-action">
                                @if (!item.seenStatus)
                                {
                                    <div class="badge bg-success float-right">New!</div>
                                }

                                <div class="d-flex align-items-start">
                                    <img src="https://bootdey.com/img/Content/avatar/avatar5.png" class="rounded-circle mr-1" alt="Vanessa Tucker" width="40" height="40">
                                    <div class="flex-grow-1 ml-3">
                                        @item.username
                                        @*<div class="small"><span class="fas fa-circle chat-online"></span> Online</div>*@
                                    </div>
                                </div>
                            </a>
                        }

                        <hr class="d-block d-lg-none mt-1 mb-0">
                    </div>
                    <div class="col-12 col-lg-7 col-xl-9">
                        <div class="py-2 px-4 border-bottom d-none d-lg-block">
                            <div class="d-flex align-items-center py-1">
                                <div class="position-relative">
                                    <img src="https://bootdey.com/img/Content/avatar/avatar3.png" class="rounded-circle mr-1" width="40" height="40">
                                </div>
                                <div class="flex-grow-1 pl-3">
                                    <strong>@Model.Selected_Name</strong>
                                    <div class="text-muted small"><em>Typing...</em></div>
                                </div>
                            </div>
                        </div>

                        <div class="position-relative">
                            <div class="chat-messages p-4">

                                @foreach (var item in Model.conversation)
                                {
                                    if (item.SenderId == Model.Receiver_Id)
                                    {
                                        <div class="chat-message-right pb-4">
                                            <div>
                                                <img src="https://bootdey.com/img/Content/avatar/avatar1.png" class="rounded-circle mr-1" alt="Chris Wood" width="40" height="40">
                                                <div class="text-muted small text-nowrap mt-sm-1" style="font-size: 0.72em;">@item.Timestamp.ToShortDateString()</div>
                                                <div class="text-muted small text-nowrap mt-sm-0" style="font-size: 0.62em;">@item.Timestamp.ToShortTimeString()</div>
                                            </div>
                                            <div class="flex-shrink-1 bg-light rounded py-2 px-3 mr-3">
                                                <div class="font-weight-bold mb-1">You</div>
                                                @item.MessageContent
                                            </div>
                                        </div>

                                    }
                                    else
                                    {
                                        <div class="chat-message-left pb-4">
                                            <div>
                                                <img src="https://bootdey.com/img/Content/avatar/avatar3.png" class="rounded-circle mr-1" alt="Sharon Lessman" width="40" height="40">
                                                <div class="text-muted small text-nowrap mt-sm1" style="font-size: 0.72em;">@item.Timestamp.ToShortDateString()</div>
                                                <div class="text-muted small text-nowrap mt-sm-0" style="font-size: 0.62em;">@item.Timestamp.ToShortTimeString()</div>
                                            </div>
                                            <div class="flex-shrink-1 bg-light rounded py-2 px-3 ml-3">
                                                <div class="font-weight-bold mb-1">@Model.Selected_Name</div>
                                                @item.MessageContent
                                            </div>
                                        </div>
                                    }
                                }

                            </div>
                        </div>
                        @using (Html.BeginForm("SendMessage", "Supplier", FormMethod.Post))
                        {
                            <div class="flex-grow-0 py-3 px-4 border-top">
                                <div class="input-group">
                                    @Html.HiddenFor(a => a.Selected_Id)
                                    @Html.HiddenFor(a => a.Selected_Name)
                                    @Html.HiddenFor(a => a.Receiver_Id)
                                    @Html.TextBoxFor(a => a.sendMessageContent, new { @class = "form-control", type = "text", placeholder = "Type your message" })
                                    @*<input type="text" class="form-control" placeholder="Type your message">*@
                                    <button class="btn btn-primary">Send</button>
                                </div>
                            </div>
                        }


                    </div>
                </div>
            </div>
        }


    </div>
</main>

<script>
        function openForm() {
            document.getElementById("popupForm").style.display = "block";
            populateUsers();
        }
        function closeForm() {
            document.getElementById("popupForm").style.display = "none";
        }

        function populateUsers() {
            // Simulated data for user options (replace with actual data from your backend)
            const users = {
                department1: ["Doctor1", "Doctor2", "Doctor3"],
                department2: ["salesman1", "salesman2", "salesman3"],
                department3: ["supplier1", "supplier2", "supplier3"]
            };

            const departmentSelect = document.getElementById("department");
            const receiverSelect = document.getElementById("receiver");

            const selectedDepartment = departmentSelect.value;
            const receiverOptions = users[selectedDepartment];

            // Clear previous options
            receiverSelect.innerHTML = "";

            // Populate receiver options
            for (let i = 0; i < receiverOptions.length; i++) {
                const option = document.createElement("option");
                option.value = receiverOptions[i];
                option.text = receiverOptions[i];
                receiverSelect.appendChild(option);
            }
        }

        // Add an event listener to the department select element
        const departmentSelect = document.getElementById("department");
        departmentSelect.addEventListener("change", populateUsers);
</script>

<style>
    body {
        margin-top: 20px;
    }

    .chat-online {
        color: #34ce57
    }

    .chat-offline {
        color: #e4606d
    }

    .chat-messages {
        display: flex;
        flex-direction: column;
        max-height: 400px;
        overflow-y: scroll
    }

    .chat-message-left,
    .chat-message-right {
        display: flex;
        flex-shrink: 0
    }

    .chat-message-left {
        margin-right: auto
    }

    .chat-message-right {
        flex-direction: row-reverse;
        margin-left: auto
    }

    .py-3 {
        padding-top: 1rem !important;
        padding-bottom: 1rem !important;
    }

    .px-4 {
        padding-right: 1.5rem !important;
        padding-left: 1.5rem !important;
    }

    .flex-grow-0 {
        flex-grow: 0 !important;
    }

    .border-top {
        border-top: 1px solid #dee2e6 !important;
    }

    .border-right {
        border-right: 1px solid #dee2e6 !important;
    }

    .list-group-item {
        position: relative;
        display: block;
        padding: 0.75rem 1.25rem;
        background-color: #fff;
        border-bottom: 1px solid #f7f7f7;
    }

    .list-group-item-action {
        width: 100%;
        color: #495057;
        text-align: inherit;
    }

    .badge {
        display: inline-block;
        padding: 0.25em 0.4em;
        font-size: 75%;
        font-weight: 700;
        line-height: 1;
        text-align: center;
        white-space: nowrap;
        vertical-align: baseline;
        border-radius: 0.25rem;
        transition: color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;
    }

    .float-right {
        float: right !important;
    }

    .bg-success {
        background-color: #28a745 !important;
    }

    .align-items-start {
        -ms-flex-align: start !important;
        align-items: flex-start !important;
    }

    .d-flex {
        display: -ms-flexbox !important;
        display: flex !important;
    }

    .mr-1, .mx-1 {
        margin-right: 0.25rem !important;
    }

    .ml-3, .mx-3 {
        margin-left: 1rem !important;
    }

    .list-group-item-action:focus, .list-group-item-action:hover {
        z-index: 1;
        color: #495057;
        text-decoration: none;
        background-color: #f2f2f2;
    }

    a:hover {
        color: #0056b3;
    }

    .pl-3, .px-3 {
        padding-left: 1rem !important;
    }

    .pr-3, .px-3 {
        padding-right: 1rem !important;
    }

    .mr-3, .mx-3 {
        margin-right: 1rem !important;
    }

    .font-weight-bold {
        font-weight: 700 !important;
    }

    .mb-1, .my-1 {
        margin-bottom: 0.25rem !important;
    }

    .input-group {
        position: relative;
        display: -ms-flexbox;
        display: flex;
        -ms-flex-wrap: wrap;
        flex-wrap: wrap;
        -ms-flex-align: stretch;
        align-items: stretch;
        width: 100%;
    }

    input {
        max-width: 100%;
    }

    .popup {
        display: none;
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.5);
    }

    .popup-content {
        background-color: #f1f1f1;
        margin: 15% auto;
        padding: 20px;
        border: 1px solid #888;
        width: 300px;
    }

    select, textarea {
        width: 100%;
        padding: 12px;
        margin: 8px 0;
        border: 1px solid #ccc;
        box-sizing: border-box;
        border-radius: 4px;
    }

    input[type=submit] {
        background-color: #4CAF50;
        color: white;
        padding: 12px 20px;
        border: none;
        cursor: pointer;
        border-radius: 4px;
    }

        input[type=submit]:hover {
            background-color: #45a049;
        }

    label {
        display: block;
        font-weight: bold;
        margin-top: 10px;
    }

    .form-group {
        margin-bottom: 20px;
    }

        .form-group:last-child {
            margin-bottom: 0;
        }

        .form-group:before,
        .form-group:after {
            content: "";
            display: table;
            clear: both;
        }
</style>
